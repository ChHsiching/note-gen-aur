name: Check Upstream Updates

on:
  schedule:
    # 每小时检查一次更新
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  check-update:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.check.outputs.new-version }}
      current-version: ${{ steps.check.outputs.current-version }}
      has-update: ${{ steps.check.outputs.has-update }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get current version
      id: current
      run: |
        CURRENT_VERSION=$(grep '^pkgver=' PKGBUILD | cut -d'=' -f2)
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"

    - name: Check upstream release
      id: check
      run: |
        # 获取最新发布版本
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/codexu/note-gen/releases/latest | \
          grep '"tag_name"' | cut -d'"' -f4 | sed 's/note-gen-v//')

        CURRENT_VERSION="${{ steps.current.outputs.current-version }}"

        echo "Latest upstream version: $LATEST_RELEASE"
        echo "Current version: $CURRENT_VERSION"

        if [ "$LATEST_RELEASE" != "$CURRENT_VERSION" ]; then
          echo "has-update=true" >> $GITHUB_OUTPUT
          echo "new-version=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          echo "✅ New version found: $LATEST_RELEASE"
        else
          echo "has-update=false" >> $GITHUB_OUTPUT
          echo "new-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "ℹ️ No updates available"
        fi

    - name: Trigger update workflow
      if: steps.check.outputs.has-update == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'update-aur.yml',
            ref: 'main',
            inputs: {
              version: '${{ steps.check.outputs.new-version }}'
            }
          })